{"ast":null,"code":"import _assertThisInitialized from \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _toConsumableArray from \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { stationTitle1, stemText1, patient1, options1, numHitsRequired1 } from \"./case1\";\nimport { stationTitle2, stemText2, patient2, options2, numHitsRequired2 } from \"./case2\";\nimport { stationTitle3, stemText3, patient3, options3, numHitsRequired3 } from \"./case3\";\nimport { stationTitle4, stemText4, patient4, options4, numHitsRequired4 } from \"./case4\";\nimport \"./styles.css\";\n\nfunction ItemList(props) {\n  var items = props.items;\n  var listItems = items.map(function (item) {\n    return React.createElement(\"li\", {\n      key: item.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, item);\n  });\n  return React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, listItems);\n}\n\nvar ShowOptionList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShowOptionList, _Component);\n\n  function ShowOptionList(props) {\n    _classCallCheck(this, ShowOptionList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShowOptionList).call(this, props));\n  }\n\n  _createClass(ShowOptionList, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.numHits >= this.props.numHitsRequired) {\n        return React.createElement(OptionList, {\n          itemObject: this.props.options,\n          handleClick: this.props.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"You do not have enough hits. \");\n      }\n    }\n  }]);\n\n  return ShowOptionList;\n}(Component);\n\nArray.prototype.diff = function (a) {\n  return this.filter(function (i) {\n    return a.indexOf(i) < 0;\n  });\n};\n\nvar OptionList =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(OptionList, _Component2);\n\n  function OptionList(props) {\n    var _this;\n\n    _classCallCheck(this, OptionList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OptionList).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(OptionList, [{\n    key: \"renderListItem\",\n    value: function renderListItem(key, index) {\n      var _this2 = this;\n\n      return React.createElement(ListItem, {\n        button: true,\n        key: key,\n        onClick: function onClick() {\n          return _this2.props.handleClick(_this2.props.itemObject[key]);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: key,\n        secondary: \"Codeword: \" + this.props.itemObject[key],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Your options and their codewords are:\"), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, Object.keys(this.props.itemObject).map(this.renderListItem.bind(this))));\n    }\n  }]);\n\n  return OptionList;\n}(Component);\n\nvar MainFrame =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(MainFrame, _Component3);\n\n  function MainFrame(props) {\n    var _this3;\n\n    _classCallCheck(this, MainFrame);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(MainFrame).call(this, props));\n    _this3.state = {\n      hits: [],\n      attempts: [],\n      input: \"\",\n      invalidInput: true\n    };\n    return _this3;\n  }\n\n  _createClass(MainFrame, [{\n    key: \"onChangeText\",\n    value: function onChangeText(e) {\n      this.setState({\n        input: e.target.value\n      });\n\n      if (e.target.value.length > 3) {\n        this.setState({\n          invalidInput: false\n        });\n      } else {\n        this.setState({\n          invalidInput: true\n        });\n      }\n    }\n  }, {\n    key: \"onEnterText\",\n    value: function onEnterText(e) {\n      var _this4 = this;\n\n      e.preventDefault();\n\n      if (this.state.input.length > 3) {\n        var all_hits = this.props.patient.filter(function (a) {\n          return a.includes(_this4.state.input.toLowerCase());\n        });\n        var current_hits = all_hits.filter(function (x) {\n          return !_this4.state.hits.includes(x);\n        });\n\n        if (current_hits.length > 0) {\n          this.setState(function (prevState) {\n            return {\n              hits: _toConsumableArray(prevState.hits).concat(_toConsumableArray(current_hits)),\n              attempts: _toConsumableArray(prevState.attempts).concat([_this4.state.input])\n            };\n          });\n        } else {\n          this.setState(function (prevState) {\n            return {\n              attempts: _toConsumableArray(prevState.attempts).concat([_this4.state.input])\n            };\n          });\n        }\n\n        this.setState({\n          input: \"\"\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        className: \"main-frame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"page\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"stem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"CANDIDATE INSTRUCTIONS\"), React.createElement(\"div\", {\n        className: \"contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"jwu202 at student.monash.edu for questions. Feedback appreciated!\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Station No: \"), \" \", this.props.stationNo, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Station Title: \"), \" \", this.props.stationTitle, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Station Time: \"), \" Unlimited :) \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, this.props.stemText), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"TASKS:\"), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Achieve \", this.props.numHitsRequired, \" hits and gather enough information to come to a diagnosis!\")), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"IMPORTANT NOTES:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"DO NOT\"), \" change tabs until you have completed this case - you will lose all your information! Only change tabs once you have been presented with your options and selected one - then it's okay.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Input any HoPC questions, symptoms, risk factors, or examination findings you would like to know.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Where possible, use the most succinct descriptor (e.g. \\\"dyspnoea\\\" instead of shortness of breath).\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Your inputs need to be a minimum of \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \" 4 characters\"), \".\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Inputs should be medical terminology for a \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"specific \"), \"finding, symptom or risk factor.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Once you have achieved \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, this.props.numHitsRequired, \" hits\"), \", you will be presented with options, and the corresponding codeword. Click your option and the tab name will change to the codeword. Then progress to the next tab, or, if this is Station 4, send your list of 4 codewords to the live chat!\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onEnterText.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        value: this.state.input,\n        error: this.state.invalidInput,\n        onChange: this.onChangeText.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Test\", \" \"), React.createElement(Button, {\n        onClick: this.onEnterText.bind(this),\n        onKeyPress: function onKeyPress(ev) {\n          if (ev.key === \"Enter\") {\n            _this5.onEnterText.bind(_this5);\n\n            ev.preventDefault();\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Check\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, this.state.hits.length >= this.props.numHitsRequired ? \"You have options! Scroll down below.\" : \"You do not have enough hits yet.\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"hits\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Hits\"), React.createElement(ItemList, {\n        items: this.state.hits,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \" \")), React.createElement(\"div\", {\n        className: \"attempts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Attempts\"), React.createElement(ItemList, {\n        items: this.state.attempts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \" \"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"options>\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(ShowOptionList, {\n        handleClick: this.props.handleClick,\n        numHitsRequired: this.props.numHitsRequired,\n        options: this.props.options,\n        numHits: this.state.hits.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MainFrame;\n}(Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(App, _Component4);\n\n  function App(props) {\n    var _this6;\n\n    _classCallCheck(this, App);\n\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this6.state = {\n      done1: false,\n      codeword1: \"\",\n      done2: false,\n      codeword2: \"\",\n      done3: false,\n      codeword3: \"\",\n      done4: false,\n      codeword4: \"\"\n    };\n\n    _this6.notify = function () {\n      return toast.info(\"Scroll up and go to the next tab/case or if this is the last case, post your codewords in the chat!\");\n    }; // TODO CHANGE THIS, THIS IS HORRIBLE PRACTICE\n\n\n    _this6.handleClick1 = _this6.handleClick1.bind(_assertThisInitialized(_assertThisInitialized(_this6)));\n    _this6.handleClick2 = _this6.handleClick2.bind(_assertThisInitialized(_assertThisInitialized(_this6)));\n    _this6.handleClick3 = _this6.handleClick3.bind(_assertThisInitialized(_assertThisInitialized(_this6)));\n    _this6.handleClick4 = _this6.handleClick4.bind(_assertThisInitialized(_assertThisInitialized(_this6)));\n    return _this6;\n  }\n\n  _createClass(App, [{\n    key: \"handleClick1\",\n    value: function handleClick1(word) {\n      this.setState({\n        done1: true,\n        codeword1: word\n      });\n      this.notify();\n    }\n  }, {\n    key: \"handleClick2\",\n    value: function handleClick2(word) {\n      this.setState({\n        done2: true,\n        codeword2: word\n      });\n      this.notify();\n    }\n  }, {\n    key: \"handleClick3\",\n    value: function handleClick3(word) {\n      this.setState({\n        done3: true,\n        codeword3: word\n      });\n      this.notify();\n    }\n  }, {\n    key: \"handleClick4\",\n    value: function handleClick4(word) {\n      this.setState({\n        done4: true,\n        codeword4: word\n      });\n      this.notify();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(ToastContainer, {\n        autoClose: 8000,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }), React.createElement(Tabs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(TabList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, this.state.done1 ? this.state.codeword1.toUpperCase() : stationTitle1), React.createElement(Tab, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, this.state.done2 ? this.state.codeword2.toUpperCase() : stationTitle2), React.createElement(Tab, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, this.state.done3 ? this.state.codeword3.toUpperCase() : stationTitle3), React.createElement(Tab, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, this.state.done4 ? this.state.codeword4.toUpperCase() : stationTitle4)), React.createElement(TabPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(MainFrame, {\n        stationNo: 1,\n        stationTitle: stationTitle1,\n        stemText: stemText1,\n        patient: patient1,\n        numHitsRequired: numHitsRequired1,\n        options: options1,\n        handleClick: this.handleClick1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      })), React.createElement(TabPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(MainFrame, {\n        stationNo: 2,\n        stationTitle: stationTitle2,\n        stemText: stemText2,\n        patient: patient2,\n        numHitsRequired: numHitsRequired2,\n        options: options2,\n        handleClick: this.handleClick2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      })), React.createElement(TabPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(MainFrame, {\n        stationNo: 3,\n        stationTitle: stationTitle3,\n        stemText: stemText3,\n        patient: patient3,\n        numHitsRequired: numHitsRequired3,\n        options: options3,\n        handleClick: this.handleClick3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      })), React.createElement(TabPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(MainFrame, {\n        stationNo: 4,\n        stationTitle: stationTitle4,\n        stemText: stemText4,\n        patient: patient4,\n        numHitsRequired: numHitsRequired4,\n        options: options4,\n        handleClick: this.handleClick4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 387\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/home/wjmn/Documents/githold/NEUROREV_ALPHA/src/index.js"],"names":["React","Component","ReactDOM","TextField","Button","List","ListItem","ListItemText","Tab","Tabs","TabList","TabPanel","ToastContainer","toast","stationTitle1","stemText1","patient1","options1","numHitsRequired1","stationTitle2","stemText2","patient2","options2","numHitsRequired2","stationTitle3","stemText3","patient3","options3","numHitsRequired3","stationTitle4","stemText4","patient4","options4","numHitsRequired4","ItemList","props","items","listItems","map","item","toString","ShowOptionList","numHits","numHitsRequired","options","handleClick","Array","prototype","diff","a","filter","i","indexOf","OptionList","state","key","index","itemObject","Object","keys","renderListItem","bind","MainFrame","hits","attempts","input","invalidInput","e","setState","target","value","length","preventDefault","all_hits","patient","includes","toLowerCase","current_hits","x","prevState","stationNo","stationTitle","stemText","onEnterText","onChangeText","ev","App","done1","codeword1","done2","codeword2","done3","codeword3","done4","codeword4","notify","info","handleClick1","handleClick2","handleClick3","handleClick4","word","toUpperCase","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  stationTitle1,\n  stemText1,\n  patient1,\n  options1,\n  numHitsRequired1\n} from \"./case1\";\nimport {\n  stationTitle2,\n  stemText2,\n  patient2,\n  options2,\n  numHitsRequired2\n} from \"./case2\";\nimport {\n  stationTitle3,\n  stemText3,\n  patient3,\n  options3,\n  numHitsRequired3\n} from \"./case3\";\nimport {\n  stationTitle4,\n  stemText4,\n  patient4,\n  options4,\n  numHitsRequired4\n} from \"./case4\";\n\nimport \"./styles.css\";\n\nfunction ItemList(props) {\n  const items = props.items;\n  const listItems = items.map(item => <li key={item.toString()}>{item}</li>);\n  return <ol>{listItems}</ol>;\n}\n\nclass ShowOptionList extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    if (this.props.numHits >= this.props.numHitsRequired) {\n      return (\n        <OptionList\n          itemObject={this.props.options}\n          handleClick={this.props.handleClick}\n        />\n      );\n    } else {\n      return <p>You do not have enough hits. </p>;\n    }\n  }\n}\n\nArray.prototype.diff = function(a) {\n  return this.filter(function(i) {\n    return a.indexOf(i) < 0;\n  });\n};\n\nclass OptionList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  renderListItem(key, index) {\n    return (\n      <ListItem\n        button\n        key={key}\n        onClick={() => this.props.handleClick(this.props.itemObject[key])}\n      >\n        <ListItemText\n          primary={key}\n          secondary={\"Codeword: \" + this.props.itemObject[key]}\n        />\n      </ListItem>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Your options and their codewords are:</h2>\n        <List>\n          {Object.keys(this.props.itemObject).map(\n            this.renderListItem.bind(this)\n          )}\n        </List>\n      </div>\n    );\n  }\n}\n\nclass MainFrame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hits: [],\n      attempts: [],\n      input: \"\",\n      invalidInput: true\n    };\n  }\n\n  onChangeText(e) {\n    this.setState({ input: e.target.value });\n    if (e.target.value.length > 3) {\n      this.setState({ invalidInput: false });\n    } else {\n      this.setState({ invalidInput: true });\n    }\n  }\n\n  onEnterText(e) {\n    e.preventDefault();\n    if (this.state.input.length > 3) {\n      var all_hits = this.props.patient.filter(a =>\n        a.includes(this.state.input.toLowerCase())\n      );\n      var current_hits = all_hits.filter(x => !this.state.hits.includes(x));\n      if (current_hits.length > 0) {\n        this.setState(prevState => ({\n          hits: [...prevState.hits, ...current_hits],\n          attempts: [...prevState.attempts, this.state.input]\n        }));\n      } else {\n        this.setState(prevState => ({\n          attempts: [...prevState.attempts, this.state.input]\n        }));\n      }\n      this.setState({ input: \"\" });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"main-frame\">\n        <page>\n          <div className=\"stem\">\n            <h1>CANDIDATE INSTRUCTIONS</h1>\n            <div className=\"contact\">\n              jwu202 at student.monash.edu for questions. Feedback appreciated!\n            </div>\n            <br />\n            <br />\n            <div className=\"details\">\n              <b>Station No: </b> {this.props.stationNo}\n              <br />\n              <b>Station Title: </b> {this.props.stationTitle} <br />\n              <b>Station Time: </b> Unlimited :) <br />\n            </div>\n            <br />\n            <p>{this.props.stemText}</p>\n            <b>TASKS:</b>\n            <ol>\n              <li>\n                Achieve {this.props.numHitsRequired} hits and gather enough\n                information to come to a diagnosis!\n              </li>\n            </ol>\n            <b>IMPORTANT NOTES:</b>\n            <br />\n            <ul>\n              <li>\n                <b>DO NOT</b> change tabs until you have completed this case -\n                you will lose all your information! Only change tabs once you\n                have been presented with your options and selected one - then\n                it's okay.\n              </li>\n              <li>\n                Input any HoPC questions, symptoms, risk factors, or examination\n                findings you would like to know.\n              </li>\n              <li>\n                Where possible, use the most\n                succinct descriptor (e.g. \"dyspnoea\" instead of\n                shortness of breath).\n              </li>\n              <li>\n                Your inputs need to be a minimum of <b> 4 characters</b>.\n              </li>\n              <li>\n                Inputs should be medical terminology for a <b>specific </b>\n                finding, symptom or risk factor.\n              </li>\n              <li>\n                Once you have achieved <b>{this.props.numHitsRequired} hits</b>,\n                you will be presented with options, and the corresponding\n                codeword. Click your option and the tab name will change to the\n                codeword. Then progress to the next tab, or, if this is Station\n                4, send your list of 4 codewords to the live chat!\n              </li>\n            </ul>\n          </div>\n          <div>\n            <form onSubmit={this.onEnterText.bind(this)}>\n              <TextField\n                value={this.state.input}\n                error={this.state.invalidInput}\n                onChange={this.onChangeText.bind(this)}\n              >\n                Test{\" \"}\n              </TextField>\n              <Button\n                onClick={this.onEnterText.bind(this)}\n                onKeyPress={ev => {\n                  if (ev.key === \"Enter\") {\n                    this.onEnterText.bind(this);\n                    ev.preventDefault();\n                  }\n                }}\n              >\n                Check\n              </Button>\n            </form>\n          </div>\n          <br />\n          <div>\n            {this.state.hits.length >= this.props.numHitsRequired\n              ? \"You have options! Scroll down below.\"\n              : \"You do not have enough hits yet.\"}\n          </div>\n          <br />\n\n          <br />\n          <hr />\n          <div className=\"results\">\n            <div className=\"hits\">\n              <h2>Hits</h2>\n              <ItemList items={this.state.hits}> </ItemList>\n            </div>\n            <div className=\"attempts\">\n              <h2>Attempts</h2>\n              <ItemList items={this.state.attempts}> </ItemList>\n            </div>\n          </div>\n          <hr />\n          <div className=\"options>\">\n            <ShowOptionList\n              handleClick={this.props.handleClick}\n              numHitsRequired={this.props.numHitsRequired}\n              options={this.props.options}\n              numHits={this.state.hits.length}\n            />\n          </div>\n        </page>\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n    \n    constructor(props) {\n        super(props);\n    this.state = {\n      done1: false,\n      codeword1: \"\",\n      done2: false,\n      codeword2: \"\",\n      done3: false,\n      codeword3: \"\",\n      done4: false,\n      codeword4: \"\"\n    };\n        this.notify = () => toast.info(\"Scroll up and go to the next tab/case or if this is the last case, post your codewords in the chat!\");\n        // TODO CHANGE THIS, THIS IS HORRIBLE PRACTICE\n        this.handleClick1 = this.handleClick1.bind(this);\n        this.handleClick2 = this.handleClick2.bind(this);\n    this.handleClick3 = this.handleClick3.bind(this);\n    this.handleClick4 = this.handleClick4.bind(this);\n  }\n\n  handleClick1(word) {\n      this.setState({ done1: true, codeword1: word });\n      this.notify()\n  }\n\n  handleClick2(word) {\n      this.setState({ done2: true, codeword2: word });\n      this.notify()\n  }\n\n  handleClick3(word) {\n      this.setState({ done3: true, codeword3: word });\n      this.notify()\n  }\n\n  handleClick4(word) {\n      this.setState({ done4: true, codeword4: word });\n      this.notify()\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n            <ToastContainer autoClose={8000} />\n            <Tabs>\n                <TabList>\n                    <Tab>\n                        {this.state.done1\n                         ? this.state.codeword1.toUpperCase()\n                         : stationTitle1}\n                    </Tab>\n                    <Tab>\n                        {this.state.done2\n                         ? this.state.codeword2.toUpperCase()\n                         : stationTitle2}\n                    </Tab>\n                    <Tab>\n                        {this.state.done3\n                         ? this.state.codeword3.toUpperCase()\n                         : stationTitle3}\n                    </Tab>\n                    <Tab>\n                        {this.state.done4\n                         ? this.state.codeword4.toUpperCase()\n                         : stationTitle4}\n                    </Tab>\n                </TabList>\n\n                <TabPanel>\n                    <MainFrame\n                        stationNo={1}\n                        stationTitle={stationTitle1}\n                        stemText={stemText1}\n                        patient={patient1}\n                        numHitsRequired={numHitsRequired1}\n                        options={options1}\n                        handleClick={this.handleClick1}\n                    />\n                </TabPanel>\n                <TabPanel>\n                    <MainFrame\n                        stationNo={2}\n                        stationTitle={stationTitle2}\n                        stemText={stemText2}\n                        patient={patient2}\n                        numHitsRequired={numHitsRequired2}\n                        options={options2}\n                        handleClick={this.handleClick2}\n                    />\n                </TabPanel>\n                <TabPanel>\n                    <MainFrame\n                        stationNo={3}\n                        stationTitle={stationTitle3}\n                        stemText={stemText3}\n                        patient={patient3}\n                        numHitsRequired={numHitsRequired3}\n                        options={options3}\n                        handleClick={this.handleClick3}\n                    />\n                </TabPanel>\n                <TabPanel>\n                    <MainFrame\n                        stationNo={4}\n                        stationTitle={stationTitle4}\n                        stemText={stemText4}\n                        patient={patient4}\n                        numHitsRequired={numHitsRequired4}\n                        options={options4}\n                        handleClick={this.handleClick4}\n                    />\n                </TabPanel>\n            </Tabs>\n        </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}