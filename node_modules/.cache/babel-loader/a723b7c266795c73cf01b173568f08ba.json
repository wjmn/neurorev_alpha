{"ast":null,"code":"import _defineProperty from \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/wjmn/Documents/githold/NEUROREV_ALPHA/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DoneIcon from '@material-ui/icons/Done';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport update from 'react-addons-update';\nimport { case0, case1, case2, case3 } from \"./cases\";\nimport Grid from '@material-ui/core/Grid';\nimport \"./styles.css\";\n\nvar ItemList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ItemList, _Component);\n\n  function ItemList(props) {\n    var _this;\n\n    _classCallCheck(this, ItemList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ItemList).call(this, props));\n    _this.state = {\n      items: _this.props.items,\n      icon: _this.props.icon\n    };\n    _this.makeItem = _this.makeItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ItemList, [{\n    key: \"makeItem\",\n    value: function makeItem(item) {\n      React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.state.icon), React.createElement(ListItemText, {\n        primary: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return this.state.items.map(function (item) {\n        return _this2.makeItem(item);\n      });\n    }\n  }]);\n\n  return ItemList;\n}(Component);\n\nfunction ItemList(props) {\n  var items = props.items;\n  var listItems = items.map();\n  return React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, listItems);\n}\n\nvar ShowOptionList =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(ShowOptionList, _Component2);\n\n  function ShowOptionList(props) {\n    _classCallCheck(this, ShowOptionList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShowOptionList).call(this, props));\n  }\n\n  _createClass(ShowOptionList, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.numHits >= this.props.numHitsRequired) {\n        return React.createElement(OptionList, {\n          itemObject: this.props.options,\n          handleClick: this.props.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"You do not have enough hits. \");\n      }\n    }\n  }]);\n\n  return ShowOptionList;\n}(Component);\n\nArray.prototype.diff = function (a) {\n  return this.filter(function (i) {\n    return a.indexOf(i) < 0;\n  });\n};\n\nvar OptionList =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(OptionList, _Component3);\n\n  function OptionList(props) {\n    var _this3;\n\n    _classCallCheck(this, OptionList);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(OptionList).call(this, props));\n    _this3.state = {};\n    return _this3;\n  }\n\n  _createClass(OptionList, [{\n    key: \"renderListItem\",\n    value: function renderListItem(key, index) {\n      var _this4 = this;\n\n      return React.createElement(ListItem, {\n        button: true,\n        key: key,\n        onClick: function onClick() {\n          return _this4.props.handleClick(_this4.props.itemObject[key]);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: key,\n        secondary: \"Codeword: \" + this.props.itemObject[key],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Your options and their codewords are:\"), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, Object.keys(this.props.itemObject).map(this.renderListItem.bind(this))));\n    }\n  }]);\n\n  return OptionList;\n}(Component);\n\nvar MainFrame =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(MainFrame, _Component4);\n\n  function MainFrame(props) {\n    var _this5;\n\n    _classCallCheck(this, MainFrame);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(MainFrame).call(this, props));\n    _this5.state = {\n      hits: [],\n      attempts: [],\n      input: \"\",\n      invalidInput: true,\n      stationTitle: _this5.props.case.stationTitle,\n      stemText: _this5.props.case.stemText,\n      patient: _this5.props.case.patient,\n      options: _this5.props.case.options,\n      numHitsRequired: _this5.props.case.numHitsRequired,\n      stationNo: _this5.props.stationNo,\n      notifyHits: _this5.props.notifyHits\n    };\n    return _this5;\n  }\n\n  _createClass(MainFrame, [{\n    key: \"onChangeText\",\n    value: function onChangeText(e) {\n      this.setState({\n        input: e.target.value\n      });\n\n      if (e.target.value.length > 3) {\n        this.setState({\n          invalidInput: false\n        });\n      } else {\n        this.setState({\n          invalidInput: true\n        });\n      }\n    }\n  }, {\n    key: \"onEnterText\",\n    value: function onEnterText(e) {\n      var _this6 = this;\n\n      e.preventDefault();\n\n      if (this.state.input.length > 3) {\n        var all_hits = this.state.patient.filter(function (a) {\n          return a.includes(_this6.state.input.toLowerCase());\n        });\n        var current_hits = all_hits.filter(function (x) {\n          return !_this6.state.hits.includes(x);\n        });\n\n        if (current_hits.length > 0) {\n          this.setState(function (prevState) {\n            return {\n              hits: _toConsumableArray(prevState.hits).concat(_toConsumableArray(current_hits)),\n              attempts: _toConsumableArray(prevState.attempts).concat([_this6.state.input])\n            };\n          });\n\n          if (this.state.hits.length >= this.state.numHitsRequired) {\n            this.state.notifyHits();\n          }\n        } else {\n          this.setState(function (prevState) {\n            return {\n              attempts: _toConsumableArray(prevState.attempts).concat([_this6.state.input])\n            };\n          });\n        }\n\n        this.setState({\n          input: \"\"\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(\"div\", {\n        className: \"main-frame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"page\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"stem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"CANDIDATE INSTRUCTIONS\"), React.createElement(\"div\", {\n        className: \"contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"jwu202 at student.monash.edu for questions. Feedback appreciated!\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Station No: \"), \" \", this.state.stationNo, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Station Title: \"), \" \", this.state.stationTitle, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Station Time: \"), \" Unlimited :) \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, this.state.stemText), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"TASKS:\"), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Achieve \", this.state.numHitsRequired, \" hits and gather enough information to come to a diagnosis!\")), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"IMPORTANT NOTES:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"DO NOT\"), \" change tabs until you have completed this case - you will lose all your information! Only change tabs once you have been presented with your options and selected one - then it's okay.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Input any HoPC questions, symptoms, risk factors, or examination findings you would like to know.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Where possible, use the most succinct descriptor (e.g. \\\"dyspnoea\\\" instead of shortness of breath).\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Your inputs need to be a minimum of \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \" 4 characters\"), \".\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Inputs should be medical terminology for a \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"specific \"), \"finding, symptom or risk factor.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Once you have achieved \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, this.state.numHitsRequired, \" hits\"), \", you will be presented with options, and the corresponding codeword. Click your option and the tab name will change to the codeword. Then progress to the next tab, or, if this is Station 4, send your list of 4 codewords to the live chat!\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onEnterText.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        value: this.state.input,\n        error: this.state.invalidInput,\n        onChange: this.onChangeText.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Test\", \" \"), React.createElement(Button, {\n        onClick: this.onEnterText.bind(this),\n        onKeyPress: function onKeyPress(ev) {\n          if (ev.key === \"Enter\") {\n            _this7.onEnterText.bind(_this7);\n\n            ev.preventDefault();\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Check\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, this.state.hits.length >= this.state.numHitsRequired ? \"You have options! Scroll down below.\" : \"You do not have enough hits yet.\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(List, {\n        dense: true,\n        subheader: React.createElement(ListSubheader, {\n          component: \"div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }, \"Hits\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(ItemList, {\n        items: this.state.hits,\n        icon: React.createElement(DoneIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(List, {\n        dense: true,\n        subheader: React.createElement(ListSubheader, {\n          component: \"div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }, \"Attempts\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(ItemList, {\n        items: this.state.hits,\n        icon: React.createElement(SearchIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \" \"))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"options>\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(ShowOptionList, {\n        handleClick: this.props.handleClick,\n        numHitsRequired: this.state.numHitsRequired,\n        options: this.state.options,\n        numHits: this.state.hits.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MainFrame;\n}(Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(App, _Component5);\n\n  function App(props) {\n    var _this8;\n\n    _classCallCheck(this, App);\n\n    _this8 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this8.state = {\n      caseArray: [0, 1, 2, 3],\n      dones: [false, false, false, false],\n      codewords: [\"\", \"\", \"\", \"\"],\n      cases: [case0, case1, case2, case3]\n    };\n\n    _this8.notifyDone = function () {\n      return toast.info(\"Scroll up and go to the next tab/case or if this is the last case, post your codewords in the chat!\");\n    };\n\n    _this8.notifyHits = function () {\n      return toast.success(\"You've got enough hits! Scroll down to see the options and select one.\");\n    };\n    /* this.handleClick0 = this.handleClick.bind(this, 0)\n     * this.handleClick1 = this.handleClick.bind(this, 1)\n     * this.handleClick2 = this.handleClick.bind(this, 2)\n     * this.handleClick3 = this.handleClick.bind(this, 3) */\n\n\n    return _this8;\n  }\n\n  _createClass(App, [{\n    key: \"handleClick\",\n    value: function handleClick(num, word) {\n      this.setState({\n        dones: update(this.state.dones, _defineProperty({}, num, {\n          $set: 'true'\n        })),\n        codewords: update(this.state.codewords, _defineProperty({}, num, {\n          $set: word\n        }))\n      });\n    }\n  }, {\n    key: \"makeTab\",\n    value: function makeTab(num) {\n      return React.createElement(Tab, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, this.state.dones[num] ? this.state.codewords[num].toUpperCase() : cases[num].stationTitle);\n    }\n  }, {\n    key: \"makeFrame\",\n    value: function makeFrame(num) {\n      var _this9 = this;\n\n      return React.createElement(TabPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(MainFrame, {\n        notifyHits: this.notifyHits,\n        case: this.state.cases[num],\n        stationNo: num + 1,\n        handleClick: function handleClick() {\n          return _this9.handleClick.bind(_this9, num);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(ToastContainer, {\n        autoClose: 8000,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }), React.createElement(Tabs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(TabList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, this.state.caseArray.map(function (a) {\n        return makeTab(a);\n      })), this.state.caseArray.map(function (a) {\n        return makeFrame(a);\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 358\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/home/wjmn/Documents/githold/NEUROREV_ALPHA/src/index.js"],"names":["React","Component","ReactDOM","TextField","Button","List","ListItem","ListItemIcon","ListItemText","ListSubheader","DoneIcon","SearchIcon","Tab","Tabs","TabList","TabPanel","ToastContainer","toast","update","case0","case1","case2","case3","Grid","ItemList","props","state","items","icon","makeItem","bind","item","map","listItems","ShowOptionList","numHits","numHitsRequired","options","handleClick","Array","prototype","diff","a","filter","i","indexOf","OptionList","key","index","itemObject","Object","keys","renderListItem","MainFrame","hits","attempts","input","invalidInput","stationTitle","case","stemText","patient","stationNo","notifyHits","e","setState","target","value","length","preventDefault","all_hits","includes","toLowerCase","current_hits","x","prevState","onEnterText","onChangeText","ev","App","caseArray","dones","codewords","cases","notifyDone","info","success","num","word","$set","toUpperCase","makeTab","makeFrame","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DoneIcon from '@material-ui/icons/Done';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport update from 'react-addons-update';\nimport {case0, case1, case2, case3} from \"./cases\"\nimport Grid from '@material-ui/core/Grid';\nimport \"./styles.css\";\n\nclass ItemList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            items: this.props.items,\n            icon: this.props.icon,\n        }\n        this.makeItem = this.makeItem.bind(this)\n    }\n\n    makeItem (item) {\n        <ListItem>\n            <ListItemIcon>\n                {this.state.icon}\n            </ListItemIcon>\n            <ListItemText primary={item} />\n        </ListItem>\n    }\n\n    render () {\n        return (\n            this.state.items.map(item => this.makeItem(item))\n        )\n    }\n}\n\nfunction ItemList(props) {\n  const items = props.items;\n  const listItems = items.map();\n  return <ol>{listItems}</ol>;\n}\n\nclass ShowOptionList extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    if (this.props.numHits >= this.props.numHitsRequired) {\n      return (\n        <OptionList\n          itemObject={this.props.options}\n          handleClick={this.props.handleClick}\n        />\n      );\n    } else {\n      return <p>You do not have enough hits. </p>;\n    }\n  }\n}\n\nArray.prototype.diff = function(a) {\n  return this.filter(function(i) {\n    return a.indexOf(i) < 0;\n  });\n};\n\nclass OptionList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  renderListItem(key, index) {\n    return (\n      <ListItem\n        button\n        key={key}\n        onClick={() => this.props.handleClick(this.props.itemObject[key])}\n      >\n        <ListItemText\n          primary={key}\n          secondary={\"Codeword: \" + this.props.itemObject[key]}\n        />\n      </ListItem>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Your options and their codewords are:</h2>\n        <List>\n          {Object.keys(this.props.itemObject).map(\n            this.renderListItem.bind(this)\n          )}\n        </List>\n      </div>\n    );\n  }\n}\n\nclass MainFrame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hits: [],\n      attempts: [],\n      input: \"\",\n        invalidInput: true,\n        stationTitle: this.props.case.stationTitle,\n        stemText: this.props.case.stemText,\n        patient: this.props.case.patient,\n        options: this.props.case.options,\n        numHitsRequired: this.props.case.numHitsRequired,\n        stationNo: this.props.stationNo,\n        notifyHits: this.props.notifyHits,\n    };\n  }\n\n  onChangeText(e) {\n    this.setState({ input: e.target.value });\n    if (e.target.value.length > 3) {\n      this.setState({ invalidInput: false });\n    } else {\n      this.setState({ invalidInput: true });\n    }\n  }\n\n  onEnterText(e) {\n    e.preventDefault();\n    if (this.state.input.length > 3) {\n      var all_hits = this.state.patient.filter(a =>\n        a.includes(this.state.input.toLowerCase())\n      );\n      var current_hits = all_hits.filter(x => !this.state.hits.includes(x));\n      if (current_hits.length > 0) {\n        this.setState(prevState => ({\n          hits: [...prevState.hits, ...current_hits],\n          attempts: [...prevState.attempts, this.state.input]\n        }));\n          if (this.state.hits.length >= this.state.numHitsRequired) {\n              this.state.notifyHits()\n          }\n      } else {\n        this.setState(prevState => ({\n          attempts: [...prevState.attempts, this.state.input]\n        }));\n      }\n      this.setState({ input: \"\" });\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"main-frame\">\n            <page>\n                <div className=\"stem\">\n                    <h1>CANDIDATE INSTRUCTIONS</h1>\n                    <div className=\"contact\">\n                        jwu202 at student.monash.edu for questions. Feedback appreciated!\n                    </div>\n                    <br />\n                    <br />\n                    <div className=\"details\">\n                        <b>Station No: </b> {this.state.stationNo}\n                        <br />\n                        <b>Station Title: </b> {this.state.stationTitle} <br />\n                        <b>Station Time: </b> Unlimited :) <br />\n                    </div>\n                    <br />\n                    <p>{this.state.stemText}</p>\n                    <b>TASKS:</b>\n                    <ol>\n                        <li>\n                            Achieve {this.state.numHitsRequired} hits and gather enough\n                            information to come to a diagnosis!\n                        </li>\n                    </ol>\n                    <b>IMPORTANT NOTES:</b>\n                    <br />\n                    <ul>\n                        <li>\n                            <b>DO NOT</b> change tabs until you have completed this case -\n                            you will lose all your information! Only change tabs once you\n                            have been presented with your options and selected one - then\n                            it's okay.\n                        </li>\n                        <li>\n                            Input any HoPC questions, symptoms, risk factors, or examination\n                            findings you would like to know.\n                        </li>\n                        <li>\n                            Where possible, use the most\n                            succinct descriptor (e.g. \"dyspnoea\" instead of\n                            shortness of breath).\n                        </li>\n                        <li>\n                            Your inputs need to be a minimum of <b> 4 characters</b>.\n                        </li>\n                        <li>\n                            Inputs should be medical terminology for a <b>specific </b>\n                            finding, symptom or risk factor.\n                        </li>\n                        <li>\n                            Once you have achieved <b>{this.state.numHitsRequired} hits</b>,\n           you will be presented with options, and the corresponding\n      codeword. Click your option and the tab name will change to the\n      codeword. Then progress to the next tab, or, if this is Station\n      4, send your list of 4 codewords to the live chat!\n                        </li>\n                    </ul>\n                </div>\n                <div>\n                    <form onSubmit={this.onEnterText.bind(this)}>\n                        <TextField\n                            value={this.state.input}\n                            error={this.state.invalidInput}\n                            onChange={this.onChangeText.bind(this)}\n                        >\n                            Test{\" \"}\n                        </TextField>\n                        <Button\n                            onClick={this.onEnterText.bind(this)}\n                            onKeyPress={ev => {\n                                    if (ev.key === \"Enter\") {\n                                        this.onEnterText.bind(this);\n                                        ev.preventDefault();\n                                    }\n                            }}\n                        >\n                            Check\n                        </Button>\n                    </form>\n                </div>\n                <br />\n                <div>\n                    {this.state.hits.length >= this.state.numHitsRequired\n                     ? \"You have options! Scroll down below.\"\n                     : \"You do not have enough hits yet.\"}\n                </div>\n                <br />\n\n                <br />\n                <hr />\n                <div className=\"results\">\n                    <Grid container spacing={12}>\n                        <Grid item xs={12} md={6}>\n                            <List\n                                dense\n                                subheader={<ListSubheader component=\"div\">Hits</ListSubheader>}\n                            >\n                                <ItemList items={this.state.hits} icon={<DoneIcon />}></ItemList>\n                            </List>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <List\n                                dense\n                                subheader={<ListSubheader component=\"div\">Attempts</ListSubheader>}\n                            >\n                                <ItemList items={this.state.hits} icon={<SearchIcon />}> </ItemList>\n                            </List>\n                        </Grid>\n                    </Grid>\n                </div>\n                <hr />\n                <div className=\"options>\">\n                    <ShowOptionList\n                        handleClick={this.props.handleClick}\n                        numHitsRequired={this.state.numHitsRequired}\n                        options={this.state.options}\n                        numHits={this.state.hits.length}\n                    />\n                </div>\n            </page>\n        </div>\n);\n  }\n}\n\nclass App extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            caseArray: [0, 1, 2, 3],\n            dones: [false, false, false, false],\n            codewords: [\"\", \"\", \"\", \"\"],\n            cases: [case0, case1, case2, case3]\n        }\n        this.notifyDone = () => toast.info(\"Scroll up and go to the next tab/case or if this is the last case, post your codewords in the chat!\");\n        this.notifyHits = () => toast.success(\"You've got enough hits! Scroll down to see the options and select one.\");\n        /* this.handleClick0 = this.handleClick.bind(this, 0)\n         * this.handleClick1 = this.handleClick.bind(this, 1)\n         * this.handleClick2 = this.handleClick.bind(this, 2)\n         * this.handleClick3 = this.handleClick.bind(this, 3) */\n    }\n\n\n    handleClick(num, word) {\n        this.setState({\n            dones: update(this.state.dones, {[num]: {$set: 'true'}}),\n            codewords: update(this.state.codewords, {[num]: {$set: word}})\n        })\n    }\n\n    makeTab(num) {\n        return (\n            <Tab>\n                {this.state.dones[num]\n                 ? this.state.codewords[num].toUpperCase()\n                 : cases[num].stationTitle}\n            </Tab>\n        )\n    }\n\n    makeFrame(num) {\n        return (\n            <TabPanel>\n                <MainFrame\n                    notifyHits = {this.notifyHits}\n                    case={this.state.cases[num]}\n                    stationNo={num + 1}\n                    handleClick={() => this.handleClick.bind(this, num)}\n                />\n            </TabPanel>\n        )\n    }\n\n    render() {\n    return (\n        <div className=\"App\">\n            <ToastContainer autoClose={8000} />\n            <Tabs>\n                <TabList>\n                    {this.state.caseArray.map(a => makeTab(a))}\n                </TabList>\n\n                {this.state.caseArray.map(a => makeFrame(a))}\n\n            </Tabs>\n        </div>\n    );\n    }\n}\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}